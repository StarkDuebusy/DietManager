extends sidebarlayout

block content
  .col-12.col-md-8.col-lg-9.col-xl-10.pl-lg-4
    .row
      .col-12.col-lg-12.d-flex
        .card.flex-fill.w-100
          .card-header
            .row
              .col-md-12
                h5.card-title.mb-0.mt-2 나의 프로필
          .card-body
            form#smartwizard-validation.wizard.wizard-primary(action='javascript:void(0)')
              ul
                li
                  a(href='#validation-step-1')
                    | 1단계
                    br
                    small ID/PW
                li
                  a(href='#validation-step-2')
                    | 2단계
                    br
                    small 정보
                li
                  a(href='#validation-step-3')
                    | 내용확인
              div
                #validation-step-1
                  .col-12.text-center 
                    .col-12.text-center
                      if profileIMG != null
                        img.rounded-circle.rounded.mr-2.mb-2(src=profileIMG alt='Placeholder' width='150' height='150')
                      else
                        img.rounded-circle.rounded.mr-2.mb-2(src='/img/avatar.png' alt='Placeholder' width='150' height='150')
                      input#editProfileIMG.custom-file-input(type='file' accept='image/png, image/jpeg, image/gif' name='input-file-preview' style="display: none;")
                    .co1-12.text-center(style="position : relative;top: -30px; left: 50px;")
                      label#btnProfileIMG.btn.btn-pill.btn-primary(for='customFileLangHTML' data-browse='Bestand kiezen' style ="vertical-align:bottom")
                        i.far.fa-folder-open
                  .form-group
                    label.form-label
                      | 이름
                      span.text-danger *
                    input#editUserName.form-control.required(name='wizard-userName' value=userName type='text')
                  .form-group
                    label.form-label
                      | 이메일
                      span.text-danger *
                    input#editEmail.form-control.required.email(name='wizard-email' value=email type='text' disabled)
                #validation-step-2
                  .form-group
                    label.form-label
                      | 생년월일
                      span.text-danger *
                    input#editBirth.form-control(type='text' name='datesingle' value=birth)
                  .form-group
                    label.form-label
                      | 성별
                      span.text-danger *
                    .form-group
                      if gender == 'm'
                        label.custom-control.custom-radio.custom-control-inline
                          input.custom-control-input(name='editRadioGender' type='radio' value='m' data-txt='남자' checked)
                          span.custom-control-label 남자
                        label.custom-control.custom-radio.custom-control-inline
                          input.custom-control-input(name='editRadioGender' type='radio' value='f'  data-txt='여자')
                          span.custom-control-label 여자
                      else
                        label.custom-control.custom-radio.custom-control-inline
                          input.custom-control-input(name='editRadioGender' type='radio' value='m' data-txt='남자' )
                          span.custom-control-label 남자
                        label.custom-control.custom-radio.custom-control-inline
                          input.custom-control-input(name='editRadioGender' type='radio' value='f'  data-txt='여자' checked)
                          span.custom-control-label 여자
                  .form-group
                    label.form-label
                      | 몸무게
                      span.text-danger *
                    input#editWeight.form-control.required(name='wizard-userWeight' type='number' placeholder="ex) 71.9" value=weight)
                  .form-group
                    label.form-label
                      | 키
                      span.text-danger *
                    input#editHeight.form-control.required(name='wizard-userHeight' type='number' placeholder="ex) 176.7" value=height)
                #validation-step-3
                  .col-12.text-center
                    if profileIMG != null
                      img.rounded-circle.rounded.mr-2.mb-2(src=profileIMG alt='Placeholder' width='140' height='140')
                    else
                      img.rounded-circle.rounded.mr-2.mb-2(src='/img/avatar.png' alt='Placeholder' width='140' height='140')
                  .form-group
                    label.form-label
                      | 이름
                    input#editResUserName.form-control.required(name='wizard-userName' type='text' value="#{userName}" disabled)
                  .form-group
                    label.form-label
                      | 이메일
                    input#editResEmail.form-control.required.email(name='wizard-email' type='text' value="stark@stark.one" disabled)
                  .form-group
                    label.form-label
                      | 생년월일
                    input#editResBirth.form-control.required.email(name='wizard-birth' type='text' value="1990.02.24" disabled)
                  .form-group
                    label.form-label
                      | 성별
                    input#editResGender.form-control.required.email(name='wizard-birth' type='text' disabled)
                  .form-group
                    label.form-label
                      | 몸무게
                    input#editResWeight.form-control.required.email(name='wizard-weight' type='number' value="71.9" disabled)
                  .form-group
                    label.form-label
                      | 키
                    input#editResHeight.form-control.required.email(name='wizard-height' type='number' value="176.7" disabled)
              script.
                document.addEventListener("DOMContentLoaded", function(event) {
                  // Validation
                  var $validationForm = $('#smartwizard-validation');
                  $validationForm.validate({
                    errorPlacement: function errorPlacement(error, element) {
                      $(element).parents('.form-group').append(
                        error.addClass('invalid-feedback small d-block')
                      )
                    },
                    highlight: function(element) {
                      $(element).addClass('is-invalid');
                    },
                    unhighlight: function(element) {
                      $(element).removeClass('is-invalid');
                    },
                    rules: {
                      'wizard-confirm': {
                        equalTo: 'input[name="wizard-password"]'
                      }
                    }
                  });

                  $validationForm.smartWizard({
                      autoAdjustHeight: false,
                      backButtonSupport: false,
                      useURLhash: false,
                      showStepURLhash: false,
                      lang: {  // Language variables
                          next: '다음', 
                          previous: '이전'
                      },
                      toolbarSettings: {
                      toolbarExtraButtons: [$('<button class="btn btn-submit btn-primary" type="button">수정하기</button>')]
                      }
                  })
                  .on('leaveStep', function(e, anchorObject, stepNumber, stepDirection) {
                    if (stepDirection === 'forward') {
                      return $validationForm.valid();
                    }
                    return true;
                  })
                  .on('showStep', function(e, anchorObject, stepNumber, stepDirection) {
                    if(stepNumber == 2){
                      $validationForm.find('.btn-submit').show();
                      
                      $('#editResUserName').val($('#editUserName').val());
                      $('#editResEmail').val($('#editEmail').val());
                      $('#editResBirth').val($('#editBirth').val());
                      $('#editResGender').val($(':input:radio[name=editRadioGender]:checked').attr('data-txt'));
                      $('#editResWeight').val($('#editWeight').val());
                      $('#editResHeight').val($('#editHeight').val());
                    }
                    return true;
                  });
                  
                  $validationForm.find('.btn-submit').on('click', function() {
                    if (!$validationForm.valid()) {
                      return;
                    }
                    
                    ajaxUpdateProfile();

                    return false;
                  }).hide();

                  $('input[name="datesingle"]').daterangepicker({
                    singleDatePicker: true,
                    showDropdowns: true,
                    "locale": {
                      "format": "YYYY-MM-DD"
                    }
                  });
                });
block script
  script.
    $(document).ready(init);

    function init(){
      $('#btnProfileIMG').on('click', function(){
        $('#editProfileIMG').trigger('click');
      });

      $('#editProfileIMG').on('change', function(){
        var input = this;
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('.rounded-circle').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
      });
    }

    function afterLogin(){
      window.location.href = getUrl('/view/profile/');
    }

    function isValidEmail(email){
        return /^(?=.{1,64}@.{3,64}$)(?=.{5,100}$).*/.test(email);
    }

    function getUrl(targetURL){
      var strURL = '';
      if(window.location.pathname.split('/').length > 1 && window.location.pathname.split('/')[1].length == 2){
        strURL = '/'+window.location.pathname.split('/')[1]+targetURL; 
      }else{
        strURL = '/kr'+targetURL; 
      }
      return strURL;
    }
    
    function ajaxUpdateProfile(){
      var formData = new FormData();
      formData.append('profileIMG', $('#editProfileIMG')[0].files[0], $('#editEmail').val()+".jpg");
      formData.append('name', $('#editUserName').val());
      formData.append('birthDay', $('#editBirth').val());
      formData.append('gender', $(':input:radio[name=editRadioGender]:checked').val());
      formData.append('weight', $('#editWeight').val());
      formData.append('height', $('#editHeight').val());

      var strURL = getUrl('/api/profile');
      $.ajax({ 
        type: 'PUT', 
        url: strURL,
        data: formData,
        dataType : 'json',
        processData : false,
        contentType : false,
        error: function(xhr, status, error){
          var message = "서버가 혼잡하오니 잠시 다시 이용 부탁드립니다.";
          var title = "서비스점검중";
          var type = "error";
          toastr[type](message, title, {
                positionClass: "toast-top-right",
                closeButton: true,
                progressBar: true,
                newestOnTop: true,
                rtl: false,
                timeOut: 5000
                });
        },
        success : function(resultParams){
          var message = "회원정보가 수정되었습니다.";
          var title = "나의 프로필 수정";
          var type = "success";

          if(resultParams.isSuccess){
            showMessage(message, title, type);
            window.location.href=getUrl('/view/dashboard');
          }else if(resultParams.needLogin){
            $('#btnMenuLogIn').trigger('click');
            type = "warning";
            message = "로그인이 필요한 서비스입니다.";
            showMessage(message, title, type);
          }else{
              type = "warning";
              message = "회원정보를 수정하지 못했습니다.";
              showMessage(message, title, type);
            }
          }
      }); 
    }

