extends sidebarlayout

block content
  .col-12.col-md-8.col-lg-9.col-xl-10.pl-lg-4
    .row
      .col-12.col-lg-12.d-flex
        .card.flex-fill.w-100
          .card-header
            .row
              .col-md-12
                h5.card-title.mb-0.mt-2 1일 다이어트 일지
          .card-body
            form#smartwizard-validation.wizard.wizard-primary(action='javascript:void(0)')
              ul
                li
                  a(href='#validation-step-1')
                    | 1단계
                    br
                    small 식단 수행도
                li
                  a(href='#validation-step-2')
                    | 2단계
                    br
                    small 운동 수행도
                li
                  a(href='#validation-step-3')
                    | 3단계
                    br
                    small 오늘의 몸무게
                li
                  a(href='#validation-step-4')
                    | 내용확인
                    br
                    small 오늘의 식사량
              div
                #validation-step-1
                  .form-group
                    label.form-label
                      | 측정일
                      span.text-danger *
                    input#editRecordDate.form-control(type='text' name='datesingle')
                  .form-group
                    label.form-label
                      | 오늘의 몸무게
                      span.text-danger *
                  .form-group
                    input#editCurrnetWeight.form-control.required(name='wizard-currentWeight' type='number' placeholder="ex) 71.9" value=currentWeight)
                  .col-12.text-right 
                    span.text-danger *
                    span 기상 직후 대소변을 보고 속옷만 입은 상태에서 몸무게를 측정해서 입력해주세요.
                #validation-step-2
                  .form-group
                    label.form-label
                      | 식단 수행 정도
                      span.text-danger *
                  .form-group
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDietProcess' type='radio' value='1' data-txt='못함')
                      span.custom-control-label 못함
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDietProcess' type='radio' value='2'  data-txt='거의 못함')
                      span.custom-control-label 거의 못함
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDietProcess' type='radio' value='3'  data-txt='반절 성공')
                      span.custom-control-label 반절 성공
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDietProcess' type='radio' value='4'  data-txt='거의 성공')
                      span.custom-control-label 거의 성공
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDietProcess' type='radio' value='5'  data-txt='성공' checked)
                      span.custom-control-label 성공
                  .col-12.text-right 
                    span.text-danger *
                    span 전날 식단 수행정도를 알려주세요.
                #validation-step-3
                  .form-group
                    label.form-label
                      | 전날 운동 진행 여부
                      span.text-danger *
                  .form-group
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDidWorkout' type='radio' value='1' data-txt='운동함' checked)
                      span.custom-control-label 운동함
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioDidWorkout' type='radio' value='2'  data-txt='운동 못함')
                      span.custom-control-label 운동 못함
                  .form-group.areaWorkoutProcess
                    label.form-label
                      | 전날 운동강도
                      span.text-danger *
                  .form-group.areaWorkoutProcess
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioWorkoutProcess' type='radio' value='1' data-txt='몸 푸는 강도')
                      span.custom-control-label 몸 푸는 강도
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioWorkoutProcess' type='radio' value='2'  data-txt='가벼운 강도')
                      span.custom-control-label 가벼운 강도
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioWorkoutProcess' type='radio' value='3'  data-txt='적당한 강도')
                      span.custom-control-label 적당한 강도
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioWorkoutProcess' type='radio' value='4'  data-txt='강한 강도')
                      span.custom-control-label 강한 강도
                    label.custom-control.custom-radio.custom-control-inline
                      input.custom-control-input(name='editRadioWorkoutProcess' type='radio' value='5'  data-txt='최고 강도' checked)
                      span.custom-control-label 최고 강도
                  .col-12.text-right 
                    span.text-danger *
                    span 본 데이터는 운동량을 늘릴 수 있는지 알기 위한 척도로 사용됩니다.
                #validation-step-4
                  .areaNutritionGuide
                    .form-group
                      label.form-label
                        | 1식당 권장 단백질 섭취량
                        span.text-info.areaTxtMealFrequency  - 1일 
                        span.text-info.areaTxtMealFrequency.txtMealFrequency 
                        span.text-info.areaTxtMealFrequency 식 기준
                      .form-row
                        .form-group.col-4
                          select#selProtein.form-control.selNutrition
                            each protein in proteinList
                              option= protein
                        .form-group.col-4
                          strong#txtProteinGram.areaTxtGram
                          | 
                          strong#txtProteinGramDiff
                    .form-group
                      label.form-label
                        | 1식당 권장 탄수화물 섭취량
                        span.text-info.areaTxtMealFrequency  - 1일 
                        span.text-info.areaTxtMealFrequency.txtMealFrequency 
                        span.text-info.areaTxtMealFrequency 식 기준
                      .form-row
                        .form-group.col-4
                          select#selCarbo.form-control.selNutrition
                            each carbo in carboList
                              option= carbo
                        .form-group.col-4
                          strong#txtCarboGram.areaTxtGram
                          | 
                          strong#txtCarboGramDiff
                  .form-group
                    label.form-label
                      | 측정일
                    input#editResRecordDate.form-control(name='wizard-recorddate' type='text' disabled)
                  .form-group
                    label.form-label
                      | 오늘의 몸무게 
                      strong#txtWeightGap.areaWeightGap.areaWeightGapNum 
                      strong.areaWeightGap.areaWeightGapNum  KG
                      span.areaWeightGap  (
                      span#txtBasicRecordDate.areaWeightGap
                      span.areaWeightGap )
                    input#editResCurrnetWeight.form-control(name='wizard-currentWeight' type='text' disabled)
                  .form-group
                    label.form-label
                      | 식단 수행 정도
                    input#editResDietProcess.form-control(name='wizard-dietProcess' type='text' disabled)
                  .form-group
                    label.form-label
                      | 전날 운동 진행 여부
                    input#editResDidWorkout.form-control(name='wizard-didWorkout' type='text' disabled)
                  .form-group.areaWorkoutProcess
                    label.form-label
                      | 전날 운동강도
                    input#editResWorkoutProcess.form-control(name='wizard-workoutProcess' type='text' disabled)
              script.
                document.addEventListener("DOMContentLoaded", function(event) {
                  var $validationForm = $('#smartwizard-validation');
                  $validationForm.validate({
                    errorPlacement: function errorPlacement(error, element) {
                      $(element).parents('.form-group').append(
                        error.addClass('invalid-feedback small d-block')
                      )
                    },
                    highlight: function(element) {
                      $(element).addClass('is-invalid');
                    },
                    unhighlight: function(element) {
                      $(element).removeClass('is-invalid');
                    },
                    rules: {
                      'wizard-confirm': {
                        equalTo: 'input[name="wizard-password"]'
                      }
                    }
                  });

                  $validationForm.smartWizard({
                      autoAdjustHeight: false,
                      backButtonSupport: false,
                      useURLhash: false,
                      showStepURLhash: false,
                      lang: {
                          next: '다음', 
                          previous: '이전'
                      },
                      toolbarSettings: {
                      toolbarExtraButtons: [$('<button class="btn btn-submit btn-primary" type="button">등록하기</button>')]
                      }
                  })
                  .on('leaveStep', function(e, anchorObject, stepNumber, stepDirection) {
                    if (stepDirection === 'forward') {
                      return $validationForm.valid();
                    }
                    return true;
                  })
                  .on('showStep', function(e, anchorObject, stepNumber, stepDirection) {
                    if(stepNumber == 3){
                      $validationForm.find('.btn-submit').show();
                      $('#editResRecordDate').val($('#editRecordDate').val());
                      $('#editResCurrnetWeight').val($('#editCurrnetWeight').val());
                      $('#editResDietProcess').val($(':input:radio[name=editRadioDietProcess]:checked').attr('data-txt'));
                      $('#editResDidWorkout').val($(':input:radio[name=editRadioDidWorkout]:checked').attr('data-txt'));
                      $('#editResWorkoutProcess').val($(':input:radio[name=editRadioWorkoutProcess]:checked').attr('data-txt'));
                      
                      ajaxNutritionGuide();
                      ajaxWeightGap();
                    }
                    return true;
                  });
                  
                  $validationForm.find('.btn-submit').on('click', function() {
                    if (!$validationForm.valid()) {
                      return;
                    }
                    
                    ajaxRecordDailyReport();

                    return false;
                  }).hide();

                  $('input[name="datesingle"]').daterangepicker({
                    singleDatePicker: true,
                    showDropdowns: true,
                    "locale": {
                      "format": "YYYY-MM-DD"
                    }
                  });
                });
block script
  script.
    $(document).ready(init);

    function init(){
      $('.selNutrition').on('change', function(){
        ajaxNutritionGuide();
      });

      $(':input:radio[name=editRadioDidWorkout]').on('change', function(){
        if($(':input:radio[name=editRadioDidWorkout]:checked').val() == 1){
          $('.areaWorkoutProcess').show();
        }else{
          $('.areaWorkoutProcess').hide();
        }
      });

      $('input:radio[name="editRadioDietProcess"]').each(function() {
        var dietProcess = !{dietProcess}; 
        if(this.value == dietProcess){ 
          this.checked = true;
        }
      });
      
      var workoutProcess = !{workoutProcess};
      if(workoutProcess != 0){
        $('input:radio[name="editRadioWorkoutProcess"]').each(function() {
          if(this.value == workoutProcess){
            this.checked = true;
          }
        });
      }else{
        $('input:radio[name="editRadioDidWorkout"]').each(function() {
          if(this.value == 2){
            this.checked = true;
            $(':input:radio[name=editRadioDidWorkout]').trigger('change');
          }
        });
      }
    }

    function afterLogin(){
      ajaxNutritionGuide();
    }

    function ajaxNutritionGuide(){
      var now = new Date();
      now.setHours(0,0,0,0);
      var newRecDate = new Date($('#editRecordDate').val());
      newRecDate.setHours(0,0,0,0);
      if(now.getTime() == newRecDate.getTime()){
        $('.areaNutritionGuide').show();
      } else{
        $('.areaNutritionGuide').hide();
      }
      
      var params = {
        protein : $('#selProtein').val(),
        carbo : $('#selCarbo').val(),
        recordDate : $('#editRecordDate').val(),
        currentWeight : $('#editCurrnetWeight').val(),
        dietProcess : $(':input:radio[name=editRadioDietProcess]:checked').val()
      };
      
      var strURL = getUrl('/api/dailyreport/nutrition');
      $.ajax({ 
        type: 'GET', 
        url: strURL,
        async: false, 
        data: params
      }).done(function(resultParams){
        var message = "";
        var title = "1일 권장 섭취량";
        var type = "";

        $('#txtCarboGramDiff').hide();
        $('#txtProteinGramDiff').hide();
        $('.areaTxtMealFrequency').hide();

        if(resultParams.isSuccess){
          $('.areaTxtMealFrequency').show();
          var proteinGram = Math.round(resultParams.proteinGram);
          $('#txtProteinGram').text(proteinGram+'g');

          var carboGram = Math.round(resultParams.carboGram);
          $('#txtCarboGram').text(carboGram+'g');

          $('.txtMealFrequency').text(resultParams.mealFrequency);
          
          $('.areaTxtMealFrequency').show();
          color4num($('#txtProteinGramDiff'), resultParams.proteinDiff);
          color4num($('#txtCarboGramDiff'), resultParams.carboDiff);

          function color4num(em, num){
            $(em).removeClass();
            $(em).hide().text('');

            if(num > 0 ){
              $(em).show().addClass('text-primary').text('+'+num+'g');
            }else if(num < 0 ){
              $(em).show().addClass('text-danger').text(num+'g');
            }
          }
        }else if(resultParams.needLogin){
          $('.areaTxtGram').text("로그인이 필요한 서비스입니다.");
        }else if(resultParams.needDietPlan){
          $('.areaTxtGram').text("먼저 다이어트 목표를 설정해주세요.");
        }else{
          type = "warning";
          message = "1일 권장 섭취량을 가져오는데 실패했습니다.";
          showMessage(message, title, type);
        }
      }).fail(function(resultParams){
        var message = "서버가 혼잡하오니 잠시 다시 이용 부탁드립니다.";
        var title = "서비스점검중";
        var type = "error";
        showMessage(message, title, type);
      });
    }

    function ajaxRecordDailyReport(){
      var params = {
        recordDate : $('#editRecordDate').val(),
        currentWeight : $('#editCurrnetWeight').val(),
        dietProcess : $(':input:radio[name=editRadioDietProcess]:checked').val(),
        didWorkout : $(':input:radio[name=editRadioDidWorkout]:checked').val()
      };

      if($(':input:radio[name=editRadioDidWorkout]:checked').val() == 1){
        params.workoutProcess = $(':input:radio[name=editRadioWorkoutProcess]:checked').val();
      }else{
        params.workoutProcess = 0;
      }
        
      
      var strURL = getUrl('/api/dailyreport');
      $.ajax({ 
        type: 'POST', 
        url: strURL,
        async: false, 
        data: params
      }).done(function(resultParams){
        var message = "1일 다이어트일지가 정상적으로 등록되었습니다.";
        var title = "1일 다이어트 일지";
        var type = "success";

        if(resultParams.isSuccess){
          showMessage(message, title, type);
          window.location.href=getUrl('/view/dashboard');
        }else if(resultParams.needLogin){
          $('#btnMenuLogIn').trigger('click');
          type = "warning";
          message = "로그인이 필요한 서비스입니다.";
          showMessage(message, title, type);
        }else if(resultParams.needDietPlan){
          type = "warning";
          message = "먼저 다이어트 목표를 설정해주세요.";
          toastr[type](message, title, {
              positionClass: "toast-top-right",
              closeButton: true,
              progressBar: true,
              newestOnTop: true,
              rtl: false,
              timeOut: 5000,
              onHidden : function(){
                window.location.href = getUrl('/view/dietplan');
              }
              });
          
        }else{
          type = "warning";
          message = "1일 다이어트일지 등록을 실패했습니다.";
          showMessage(message, title, type);
        }
      }).fail(function(resultParams){
        var message = "서버가 혼잡하오니 잠시 다시 이용 부탁드립니다.";
        var title = "서비스점검중";
        var type = "error";
        showMessage(message, title, type);
      });
    }

    function ajaxWeightGap(){
      var params = {
        currentWeight : $('#editCurrnetWeight').val()
      };
      
      var strURL = getUrl('/api/dailyreport/weightgap');
      $.ajax({ 
        type: 'GET', 
        url: strURL,
        async: false, 
        data: params
      }).done(function(resultParams){
        var message = "";
        var title = "오늘의 몸무게";
        var type = "";

        if(resultParams.isSuccess){
          $('.areaWeightGap').show();
          
          var weightGap = resultParams.weightGap.toFixed(2);
          if(weightGap < 0 ){
            $('.areaWeightGapNum').addClass('text-danger');
            $('.areaWeightGapNum').removeClass('text-info');
            $('#txtWeightGap').text(weightGap);
          }else{
            $('.areaWeightGapNum').removeClass('text-danger');
            $('.areaWeightGapNum').addClass('text-info');
            $('#txtWeightGap').text("+"+weightGap);
          }

          var date = new Date(resultParams.basicRecordDate);
          var curr_date = date.getDate();
          var curr_month = date.getMonth() + 1;
          var curr_year = date.getFullYear();
          $('#txtBasicRecordDate').text("기준일 : "+curr_year + "-" + curr_month + "-" + curr_date);

        }else if(resultParams.needLogin){
          $('.areaWeightGap').hide();
        }else if(resultParams.emptyRecord){
          $('.areaWeightGap').hide();
        }else{
          $('.areaWeightGap').hide();
        }
      }).fail(function(resultParams){
        var message = "서버가 혼잡하오니 잠시 다시 이용 부탁드립니다.";
        var title = "서비스점검중";
        var type = "error";
        showMessage(message, title, type);
      });
    }

    function getUrl(targetURL){
      var strURL = '';
      if(window.location.pathname.split('/').length > 1 && window.location.pathname.split('/')[1].length == 2){
        strURL = '/'+window.location.pathname.split('/')[1]+targetURL; 
      }else{
        strURL = '/kr'+targetURL; 
      }
      return strURL;
    }

    function showMessage(message, title, type){
      toastr[type](message, title, {
              positionClass: "toast-top-right",
              closeButton: true,
              progressBar: true,
              newestOnTop: true,
              rtl: false,
              timeOut: 5000
              });
    }